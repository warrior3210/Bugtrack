# Project by Ananay Rampal
import MySQL.connector


from tabulate import tabulate

db = MySQL. connector. connect(
    host="localhost",
    user="root",
    password="password",
    database="bug_track"
)

cursor = db.cursor()



def login():
    while True:
        print("1. EMPLOYEE LOGIN")
        print("2. CUSTOMER ")
        print("3. Exit")

        choice = int(input("Enter your option: "))
        
            if choice == 1:
                print("\n----WELCOME TO LOGIN BLOCK----\n")
                login_id = input("Enter your login ID: ")
                password = input("Enter your password: ")

                 query = "SELECT * FROM employee WHERE empLoginId = %s AND empPassword = %s"
                cursor.execute(query, (login_id, password))
                result = cursor.fetchone()

                if result:
                    emp_type = result[2]  # Get the employee type (Admin or Expert)
                   if emp_type == "ADMIN":
                    admin_module()
                elif emp_type == "EXPERT":
                    expert_module()
            if choice == 2:
                    customer_module()

            if choice == 3:
                 break


def advanced_bug_search():
    print("ADVANCED BUG SEARCH")
    # Allow the user to input various criteria like product, status, severity, date, etc.
    product = input("Enter product name: ")
    status = input("Enter bug status: ")
    severity = input("Enter bug severity: Critical/High/Medium/Low:")
    # ... Add more criteria as needed
    # Construct the query based on the entered criteria
    query = "SELECT * FROM bug WHERE product = %s AND bugStatus = %s AND severity = %s"
    values = (product, status, severity)
    # Execute the query and fetch results
    cursor.execute(query, values)
    results = cursor.fetchall()
    if results:
        table = tabulate(results, headers=["BugId", "BugEntered Date", "CustomerId", "BugStatus", "DeviceType",
                                           "BugDesc", "BugAssignedDate", "ExpertId", "BugSolvedDate", "BugSoln",
                                           "Feedback"],
                         tablefmt="pretty")
        print(table)
    else:
        print("No bugs found with the specified criteria.")



def admin_module():
    while True:
        
            print("\n-----WELCOME TO THE ADMIN MODULE-----\n ")
            print("1. Customer Services")
            print("2. Employee Services")
            print("3. Bug Services")
            print("4. Logout")

            choice = int(input("Enter your choice: "))

            if choice == 1:
                customer_services()
            elif choice == 2:
                employee_services()
            elif choice == 3:
                bug_services()
            elif choice == 4:
                break
            else:
                print("\n---Invalid choice!--- ")
        




def customer_services():
    while True:
        
            print("\n-----WELCOME TO THE CUSTOMER SERVICES.-----\n")
            print("1. View All Customers")
            print("2. Search Customers by Name")
            print("3. Search Customers by Login ID")
            print("4. Go Back")

            choice = int(input("Enter your choice: "))


            if choice == 1:
                query = "SELECT * FROM customer"
                cursor.execute(query)
                results = cursor.fetchall()

                if results:
                    table = tabulate(results, headers=["ID", "Name", "Login ID", "Age", "Phone", "Email"],
                                     tablefmt="pretty")
                    print(table)

                else:
                    print("NO CUSTOMERS FOUND ")
            elif choice == 2:
                name = input("Enter the customer name: ")
                query = "SELECT * FROM customer WHERE custName LIKE %s"
                cursor.execute(query, ('%' + name + '%',))
                results = cursor.fetchall()

                if results:
                    table = tabulate(results, headers=["LoginId", "Password", "Name", "Age", "Phone", "Email"],
                                     tablefmt="pretty")
                    print(table)

                else:
                    print("\nNO CUSTOMERS FOUND WITH THE NAME:", name )


            elif choice == 3:
                login_id = input("Enter the customer login ID: ")
                query = "SELECT * FROM customer WHERE custLoginId = %s"
                cursor.execute(query, (login_id,))
                result = cursor.fetchall()

                if result:
                    table = tabulate(result, headers=["LoginId", "Password", "Name", "Age", "Phone", "Email"],
                                     tablefmt="pretty")
                    print(table)

                else:
                    print("\nNO CUSTOMER FOUND WITH THIS LOGIN ID:", login_id )

            elif choice == 4:
                break
            else:
                print("Invalid choice!")


def employee_services():
    while True:
    
            print("\n-----WELCOME TO THE EMPLOYEE SERVICES-----\n")
            print("1. Add New Employee")
            print("2. View All Employees")
            print("3. Search Employees by Name")
            print("4. Search Employees by Login ID")
            print("5. Search Employees by Type")
            print("6. Activate or Deactivate Employee")
            print("7. Change Employee Password")
            print("8. Go Back\n")



           choice = int(input("Enter your choice: "))


           if choice == 1:
                print("/n---ENTER THE DETAILS---\n")
                emp_login_id = input("Enter the employee login ID: ")
                emp_password = input("Enter the employee password: ")
                emp_type = input("Enter the employee type (ADMIN or EXPERT): ")
                emp_name = input("Enter the employee name: ")
                emp_phone = input("Enter the employee phone number: ")
                emp_email = input("Enter the employee email: ")

                query = "INSERT INTO employee (empLoginId, empPassword, empType, empName, empPhone, empEmail) " \
                        "VALUES (%s, %s, %s, %s, %s, %s)"
                values = (emp_login_id, emp_password, emp_type, emp_name, emp_phone, emp_email)
                cursor.execute(query, values)
                db.commit()

                print("EMPLOYEE HAS BEEN ADDED SUCCESSFULLY")


          elif choice == 2:
                query = "SELECT * FROM employee"
                cursor.execute(query)
                results = cursor.fetchall()

                if results:
                    table = tabulate(results, headers=["empLoginId", "Password", "Type", "Name", "Phone", "Email","Status"],
                                     tablefmt="pretty")
                    print(table)

                else:
                    print("\nNO EMPLOYEE FOUND ")

            elif choice == 3:
                name = input("Enter the employee name: ")
                query = "SELECT * FROM employee WHERE empName LIKE %s"
                cursor.execute(query, ('%' + name + '%',))
                results = cursor.fetchall()

                if results:
                    table = tabulate(results, headers=["empLoginId", "empPassword", "Type", "empName", "Phone", "Email",
                                     "Status"],   tablefmt="pretty" )
                    print(table)

                else:
                    print("\nNO EMPLOYEE FOUND WITH THE NAME:", name )


           elif choice == 4:
                login_id = input("Enter the employee login ID: ")
                query = "SELECT * FROM employee WHERE empLoginId = %s"
                cursor.execute(query, (login_id,))
                result = cursor.fetchall()

                if result:
                    table = tabulate(result, headers=["empLoginId", "empPassword", "Type", "empName", "Phone", "Email",
                                                      "Status"],   tablefmt="pretty")
                    print(table)
                else:
                    print("\nNO EMPLOYEE FOUND WITH LoginId:", login_id )


            elif choice == 5:
                emp_type = input("Enter the employee type (Admin or Expert): ")
                query = "SELECT * FROM employee WHERE empType = %s"
                cursor.execute(query, (emp_type,))
                results = cursor.fetchall()

                if results:
                    table = tabulate(results, headers=["empLoginId", "empPassword", "Type", "empName", "Phone", "Email",
                                                       "Status"],   tablefmt="pretty")
                    print(table)
                else:
                    print("\nNO EMPLOYEES FOUND UNDER THE TYPE:", emp_type )


            elif choice == 6:
                login_id = input("Enter the employee login ID: ")
                status = input("Enter the new status (ACTIVE or INACTIVE): ")
                query = "UPDATE employee SET empStatus = %s WHERE empLoginId = %s"
                cursor.execute(query, (status, login_id))
                db.commit()

                print("\nEMPLOYEE STATUS SUCCESSFULLY UPDATED FOR LoginId:", login_id)


            elif choice == 7:
                login_id = input("Enter the employee login ID: ")
                new_password = input("Enter the new password: ")
                query = "UPDATE employee SET empPassword = %s WHERE empLoginId = %s"
                cursor.execute(query, (new_password, login_id))
                db.commit()
                print("EMPLOYEE PASSWORD CHANGED SUCCESSFULLY FOR LoginId:",login_id )
            elif choice == 8:
                break
            else:
                print("Invalid choice!")



# Function to manage bug services in the admin module
def bug_services():
    while True:
        try:
            print("\nWELCOME TO THE BUG SERVICES\n")
            print("1. View All Bugs")
            print("2. Search Bugs by ID")
            print("3. Search Bugs by Status")
            print("4. Search Bugs by Customer Login ID")
            print("5. Assign Bug to Expert")
            print("6. Go Back\n")

            choice = int(input("Enter your choice: "))

            if choice == 1:
                query = "SELECT * FROM bug"
                cursor.execute(query)
                results = cursor.fetchall()

                if results:
                    table = tabulate(results, headers=[ "BugId","BugEntered Date", "CustomerId", "BugStatus", 
                                                        "DeviceType","BugDesc", "BugAssignedDate","ExpertId",
                                                        "BugSolvedDate","BugSoln","Feedback"],
                                     tablefmt="pretty")
                    print(table)
                else:
                    print("NO BUGS FOUND")

            elif choice == 2:
                bug_id = int(input("Enter the bug ID: "))
                query = "SELECT * FROM bug WHERE bugId = %s"
                cursor.execute(query, (bug_id,))
                result = cursor.fetchall()

                if result:
                    table = tabulate(result, headers=["BugId", "BugEntered Date", "CustomerId", "BugStatus", 
                                                      "DeviceType","BugDesc", "BugAssignedDate", "ExpertId", 
                                                      "BugSolvedDate", "BugSoln", "Feedback"],
                                     tablefmt="pretty")
                    print(table)
                # the table will be printed 
                else:
                    print("NO BUG FOUND FOR BugId:", bug_id )
         elif choice == 3:
                status = input("Enter the bug status: ")
                query = "SELECT * FROM bug WHERE bugStatus = %s"
                cursor.execute(query, (status,))
                results = cursor.fetchall()
                if results:
                    table = tabulate(results, headers=["BugId", "BugEntered Date", "CustomerId", "BugStatus", 
                                                       "DeviceType","BugDesc", "BugAssignedDate", "ExpertId", 
                                                       "BugSolvedDate", "BugSoln","Feedback"],
                                     tablefmt="pretty")
                    print(table)
                else:
                    print("NO BUGS FOUND WHERE STATUS:",status )
            elif choice == 4:
                login_id = input("Enter the customer login ID: ")
                query = "SELECT * FROM bug WHERE custLoginId = %s"
                cursor.execute(query, (login_id,))
                results = cursor.fetchall()

                if results:
                    table = tabulate(results, headers=["BugId", "BugEntered Date", "CustomerId", "BugStatus",
                                                       "DeviceType", "BugDesc", "BugAssignedDate", "ExpertId",
                                                       "BugSolvedDate", "BugSoln","Feedback"],
                                     tablefmt="pretty")
                    print(table)
                else:
                    print("\nNO BUGS FOUND FOR CustomerId:", login_id)

            elif choice == 5:
                bug_id = int(input("Enter the bug ID: "))
                expert_login_id = input("Enter the expert login ID: ")
                query = "UPDATE bug SET expertLoginId = %s, bugStatus = 'Assigned', expertAssignedDate = NOW() " \
                        "WHERE bugId = %s"
                cursor.execute(query, (expert_login_id, bug_id))
                db.commit()

                print("\nBUG ASSIGNED TO THE EXPERT(expertId:)",expert_login_id, "SUCCESSFULLY")
            elif choice == 6:
                break
            else:
                print("Invalid Choice")

# Expert module functions
def expert_module():
    while True:
        print("\nWELCOME TO THE EXPERT MODULE\n")
        print("1. View Assigned Bugs")
        print("2. Filter Assigned Bugs by Status")
        print("3. Solve Bug")
        print("4. Change Password")
        print("5. Logout\n")
        # we will input the values 
        choice = int(input("Enter your choice: "))

        if choice == 1:
            expert_login_id = input("Enter your login ID: ")
            query = "SELECT * FROM bug WHERE expertLoginId = %s"
            cursor.execute(query, (expert_login_id,))
            results = cursor.fetchall()
            if results:
                table = tabulate(results, headers=["BugId", "BugEntered Date", "CustomerId", "BugStatus", 
                                                   "DeviceType","BugDesc", "BugAssignedDate", "ExpertId", 
                                                   "BugSolvedDate", "BugSoln","Feedback"],
                                 tablefmt="pretty")
                print(table)
            else:
                print("NO ASSIGNED BUGS FOUND FOR ID:", expert_login_id )

        elif choice == 2:
            expert_login_id = input("Enter your login ID: ")
            status = input("Enter the bug status: ")
            query = "SELECT * FROM bug WHERE expertLoginId = %s AND bugStatus = %s"
            cursor.execute(query, (expert_login_id, status))
            results = cursor.fetchall()
            if results:
                table = tabulate(results, headers=["BugId", "BugEntered Date", "CustomerId", "BugStatus",
                                                   "DeviceType","BugDesc", "BugAssignedDate", "ExpertId", 
                                                   "BugSolvedDate", "BugSoln","Feedback"],
                                 tablefmt="pretty")
                print(table)
            else:
                print("NO BUGS FOUND WITH SPECIFIED STATUS:",status )

        elif choice == 3:
            bug_id = int(input("Enter the bug ID: "))
            query = "SELECT * FROM bug WHERE bugId = %s"
            cursor.execute(query, (bug_id,))
            result = cursor.fetchall()
            if result:
                table = tabulate(result, headers=["BugId", "BugEntered Date", "CustomerId", "BugStatus",
                                                  "DeviceType","BugDesc", "BugAssignedDate", "ExpertId",
                                                  "BugSolvedDate", "BugSoln", "Feedback"],
                                 tablefmt="pretty")
                print(table)
                solution = input("Enter the bug solution: ")
                query = "UPDATE bug SET bugStatus = 'Solved', bugSolvedDate = NOW(), solution = %s WHERE bugId = %s"
                cursor.execute(query, (solution, bug_id))
                db.commit()

                print("BUG SOLUTION SUBMITTED SUCCESSFULLY ")

        elif choice == 4:
            expert_login_id = input("Enter your login ID: ")
            new_password = input("Enter the new password: ")
            query = "UPDATE employee SET empPassword = %s WHERE empLoginId = %s"
            cursor.execute(query, (new_password, expert_login_id))
            db.commit()
            print("PASSWORD CHANGED SUCCESSFULLY")
        elif choice == 5:
            break
        else:
            print("Invalid choice!")
# Customer module functions
def customer_module():
    while True:
        print("\nWELCOME TO THE CUSTOMER MODULE\n")
        print("1. NEW USER ")
        print("2. EXISTING USER ")
        print("3. EXIT")

        choice = int(input("Enter your option: "))
        if choice == 1:
                print( " WELCOME TO THE BUG TRACKING SYSTEM ")
                print( " PLEASE CREATE AN ACCOUNT TO ACCESS THE SYSTEM\n\n ")
                print( "---SOME INSTRUCTIONS FOR CREATING AN ACCOUNT---")
                print( ">>THE LOGIN ID SHOULD BE OF THE FORMAT CU1XXX where CU2 is the code for customers.<<")
                print(">>AGE AND PHONE NUMBER SHOULD BE IN NUMBERS ONLY .<<\n")

                    cust_login_id = input("Enter the customer login ID:  ")
                    query = "SELECT * FROM customer WHERE custLoginId = %s"
                    cursor.execute(query, (cust_login_id,))
                    result = cursor.fetchone()
                    if result:
                        print("Login ID is already taken. Please choose a different one.")
                    else:
                        pass

                cust_password = input("Enter the customer password: ")
                cust_name = input("Enter the customer name: ")
                cust_age = int(input("Enter the customer age: "))
                cust_phone = input("Enter the customer phone number: ")
                cust_email = input("Enter the customer email: ")

                query = "INSERT INTO customer (custLoginId, custPassword, custName, custAge, custPhone, custEmail) " \
                        "VALUES (%s, %s, %s, %s, %s, %s)"
                values = (cust_login_id, cust_password, cust_name, cust_age, cust_phone, cust_email)
                cursor.execute(query, values)
                db.commit()

                print("\nYOUR ACCOUNT HAS BEEN CREATED SUCCESSFULLY. TAKE FULL USE OF THE FACILITIES AVAILABLE TO YOU")

        if choice == 2:
            login_id = input("Enter your login ID: ")
            password = input("Enter your password: ")
            query = "SELECT * FROM employee WHERE empLoginId = %s AND empPassword = %s"
            cursor.execute(query, (login_id, password))
            result = cursor.fetchone()

            if result:
                customer_module()
            else:
                print("Invalid login credentials!")

            print("WELCOME BACK TO THE SYSTEM ")
            print("WELCOME BACK TO THE SYSTEM ")
            while True:
                print("\nWELCOME TO THE CUSTOMER MODULE")
                print("1. Update Account")
                print("2. Post New Bug")
                print("3. View All Bugs")
                print("4. Search Bugs based on status")
                print("5. View Bug Solution")
                print("6. Feedback ")
                print("7. Change Password")
                print("8. Log Out")

                choice = int(input("Enter your choice: "))

        

          


        
        


               
            
             

                





      






















# Close the database connection
db.close()
